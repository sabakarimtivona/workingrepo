# Generated by Django 4.1.7 on 2023-04-26 11:55

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Region',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='created date')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated date')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('displayname', models.CharField(max_length=255)),
                ('zones', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, null=True, size=None)),
                ('is_government', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ['displayname'],
            },
        ),
        migrations.CreateModel(
            name='VmPricingPlan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='VmSizes',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='created date')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated date')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('vm_sku_name', models.CharField(max_length=200)),
                ('vm_sku_details', models.JSONField()),
                ('family', models.CharField(max_length=200)),
                ('vCPUs', models.IntegerField()),
                ('MemoryGB', models.FloatField(default=0)),
                ('location', models.CharField(default='', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VmTier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tier', models.CharField(max_length=200)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pricing',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='created date')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated date')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('currencyCode', models.CharField(blank=True, default='', max_length=100)),
                ('tierMinimumUnits', models.FloatField()),
                ('retailPrice', models.FloatField()),
                ('unitPrice', models.FloatField()),
                ('armRegionName', models.CharField(blank=True, default='', max_length=100)),
                ('location', models.CharField(blank=True, default='', max_length=100)),
                ('effectiveStartDate', models.CharField(blank=True, default='', max_length=100)),
                ('meterId', models.CharField(blank=True, default='', max_length=100)),
                ('meterName', models.CharField(blank=True, default='', max_length=100)),
                ('productId', models.CharField(blank=True, default='', max_length=100)),
                ('skuId', models.CharField(blank=True, default='', max_length=100)),
                ('availabilityId', models.CharField(blank=True, max_length=100, null=True)),
                ('productName', models.CharField(blank=True, default='', max_length=100)),
                ('skuName', models.CharField(blank=True, default='', max_length=100)),
                ('serviceName', models.CharField(blank=True, default='', max_length=100)),
                ('serviceId', models.CharField(blank=True, default='', max_length=100)),
                ('serviceFamily', models.CharField(blank=True, default='', max_length=100)),
                ('unitOfMeasure', models.CharField(blank=True, default='', max_length=100)),
                ('type', models.CharField(blank=True, default='', max_length=100)),
                ('isPrimaryMeterRegion', models.CharField(blank=True, default='', max_length=100)),
                ('armSkuName', models.CharField(blank=True, default='', max_length=100)),
                ('vmsize', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pricing', to='pricing_api.vmsizes')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Benchmark',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='created date')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated date')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('vm_sku_name', models.CharField(max_length=250)),
                ('operating_system', models.CharField(max_length=200)),
                ('CPU', models.CharField(max_length=200)),
                ('vCPUs', models.CharField(max_length=200)),
                ('NUMA_Nodes', models.CharField(max_length=200)),
                ('Memory', models.CharField(max_length=200)),
                ('Avg_Score', models.CharField(max_length=200)),
                ('StdDev', models.CharField(max_length=200)),
                ('StdDev_percentage', models.CharField(max_length=200)),
                ('Runs', models.CharField(max_length=200)),
                ('Published_date', models.CharField(max_length=200)),
                ('vmsizes', models.ManyToManyField(to='pricing_api.vmsizes')),
            ],
            options={
                'ordering': ['vm_sku_name'],
                'unique_together': {('vm_sku_name', 'operating_system', 'CPU', 'NUMA_Nodes')},
            },
        ),
    ]
